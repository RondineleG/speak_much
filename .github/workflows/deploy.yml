name: CI/CD Pipeline

on:
  pull_request:
    types:
      - closed
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up the .NET SDK
      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      # Step 3: Restore NuGet packages
      - name: Restore NuGet packages
        run: dotnet restore

      # Step 4: Read the version from package-version.yml
      - name: Read version from package-version.yml
        id: version
        run: |          
          PACKAGE_VERSION=$(yq e '.variables.PACKAGE_VERSION' package-version.yml)
          SUFFIX_VERSION=$(yq e '.variables.SUFFIX_VERSION // ""' package-version.yml)          

          if [ -z "$PACKAGE_VERSION" ]; then
            echo "Error: PACKAGE_VERSION is not set in package-version.yml"
            exit 1
          fi

          if [ -n "$SUFFIX_VERSION" ]; then
            FULL_VERSION="${PACKAGE_VERSION}-${SUFFIX_VERSION}"
            echo "Using concatenated version: $FULL_VERSION"
            echo "PACKAGE_VERSION=${FULL_VERSION}" >> $GITHUB_ENV
          else
            echo "Using base version: $PACKAGE_VERSION"
            echo "PACKAGE_VERSION=${PACKAGE_VERSION}" >> $GITHUB_ENV
          fi

      # Step 5: Publish the project
      - name: Publish the project
        run: |
          dotnet publish --configuration Release --output ./publish_output --version ${{ env.PACKAGE_VERSION }}

      # Step 6: Pack the project
      - name: Pack the project
        run: |
          dotnet pack --configuration Release --output ./nuget_output --version ${{ env.PACKAGE_VERSION }}

      # Step 7: Push the package to NuGet, using --skip-duplicate
      - name: Publish NuGet package
        run: |
          dotnet nuget push ./nuget_output/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
